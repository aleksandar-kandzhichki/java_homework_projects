import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class main {

	static int port = 9991;
	static String endCommunicationStr = "endCSV";
	
	public static void main(String[] args) {
		System.out.println("hello world");
		
		Thread thread1 = new Thread () {
			  public void run () {
				try {
					launchServer();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			  }
			};
			Thread thread2 = new Thread () {
			  public void run () {
				try {
					LaunchClient();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			  }
			};
			thread1.start();
			thread2.start();
		
	}
	
	public static void launchServer() throws IOException {
		try(ServerSocket serverSocket = new ServerSocket(9991)) {
            Socket connectionSocket = serverSocket.accept();

            //Create Input&Outputstreams for the connection
            InputStream inputToServer = connectionSocket.getInputStream();
            OutputStream outputFromServer = connectionSocket.getOutputStream();

            Scanner scanner = new Scanner(inputToServer, "UTF-8");
            PrintWriter serverPrintOut = new PrintWriter(new OutputStreamWriter(outputFromServer, "UTF-8"), true);

            //Have the server take input from the client and echo it back
            //This should be placed in a loop that listens for a terminator text e.g. bye
            boolean done = false;
            
            List<DataEntry> data = new ArrayList<DataEntry>();

            while(!done) {
                String row = scanner.nextLine();

                if(row.toLowerCase().trim().equals(endCommunicationStr.toLowerCase())) {
                    done = true;
                }
                else {
                	try {
						data.add((new DataEntry()).fromRow(row));
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
                }
            }
            
            serverPrintOut.write("Received all data successfully!");
            
            scanner.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
	
	public static void LaunchClient() throws IOException {
		System.out.println("started client");
		String row;
        BufferedReader inFromUser = new BufferedReader(new InputStreamReader(System.in));

        Socket clientSocket = new Socket("localhost", port);
        DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());
        BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));

        boolean done = false;

        while(!done) {
	        row = inFromUser.readLine();
	        if(row.length() == 0) done=true;
	        else {
	        	outToServer.writeBytes(row + '\n');
	        }
	        
	        /*
	        modifiedSentence = inFromServer.readLine();
	        System.out.println(modifiedSentence);
	        
            if(modifiedSentence.toLowerCase().trim().equals(endCommunicationStr)) {
                done = true;
            }*/
        }
        
        outToServer.writeBytes(endCommunicationStr);
        
        String result = inFromServer.readLine();
        
        System.out.println(result);
        clientSocket.close();
	}
}
